{% extends '../CommonAdmin/ActionsAction/ActionsBuilderAction.php.twig' %}

{% block getObject %}

    protected function getObject($pk)
    {
        ${{ builder.ModelClass }} = $this->getObjectQuery($pk)->findPk($pk);

        if (!${{ builder.ModelClass }}) {
            throw new NotFoundHttpException("No {{ model }} found on {{ builder.getFieldGuesser().getModelPrimaryKeyName(model) }} : $pk");
        }

        return ${{ builder.ModelClass }};
    }

{% endblock %}

{% block getQuery -%}
    protected function getObjectQuery($pk)
    {
        return \{{ model }}Query::create();
    }
{% endblock %}

{% block executeObjectDelete %}

    protected function executeObjectDelete(\{{ model }} ${{ builder.ModelClass }})
    {
        ${{ builder.ModelClass }}->delete();
    }

{% endblock %}

{% block executeBatchDelete %}

    protected function executeBatchDelete(array $selected)
    {
        \{{ model }}Query::create()
            ->filterByPrimaryKeys($selected)
            ->delete();
    }

{% endblock %}

{% block saveObject %}

    protected function saveObject(\{{ model }} ${{ builder.ModelClass }}, array $validationGroups = array(), $debug = true)
    {
        $validator = $this->get('validator');
        $errors = $validator->validate(${{ builder.ModelClass }}, $validationGroups, false, true);

        if (count($errors) > 0) {
            if ($debug) {
                $this->get('logger')->error((string) $errors);
            }
            throw new ValidationException($errors);
        } else {
            ${{ builder.ModelClass }}->save();
        }
    }
{% endblock %}
