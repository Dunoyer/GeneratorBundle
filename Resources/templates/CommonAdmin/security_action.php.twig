{% block security_use %}
use Symfony\Component\Security\Core\Exception\AccessDeniedException;
{% endblock %}

{% block security_check %}
    /**
     * Check user credentials
     *
     * @param string $credentials
     * @param \{{ model }} ${{ builder.ModelClass }}
     * @return boolean
     */
    protected function validateCredentials($credentials, \{{ model }} ${{ builder.ModelClass }} = null)
    {
        // TODO: define parameter to use (or not) JMS extra security bundle and
        // wrap $credentials into an Expression. If this, don't forget to edit the "use" section
        return $this->isGranted($credentials, ${{ builder.ModelClass }});
    }

   /**
    * Throws exception if credentials are not validated
    *
    * @param string $credentials
    * @param \{{ model }} ${{ builder.ModelClass }}
    * @throws AccessDeniedException if is not allowed
    */
    protected function denyAccessUnlessValidateCredentials($credentials, \{{ model }} ${{ builder.ModelClass }} = null)
    {
        if (!$this->validateCredentials($credentials, ${{ builder.ModelClass }}) {
            throw $this->createAccessDeniedException('Credentials unsatisfied');
        }
    }
{% endblock %}

{% block security_action %}
{% if builder.yamlKey is same as('actions')  %}
    {% if action is defined and action.credentials %}
    $this->denyAccessUnlessValidateCredentials('{{ action.credentials }}');
    {% endif %}
{% elseif credentials %}
    $this->denyAccessUnlessValidateCredentials('{{ credentials }}');
{% endif %}
{% endblock %}

{% block security_action_with_object %}
{% if builder.yamlKey is same as('actions') %}
    {% if action is defined and action.credentials %}
    $this->denyAccessUnlessValidateCredentials('{{ action.credentials }}', ${{ builder.ModelClass }});
    {% endif %}
{% elseif credentials %}
    $this->denyAccessUnlessValidateCredentials('{{ credentials }}', ${{ builder.ModelClass }});
{% endif %}
{% endblock %}
